#
# Kraken Build File for GitLab
# This pipeline requires 9 variables to be set in the CI/CD Settings
#
# General Test Cluster Variables:
# SSH_KEY - base64 encoded ssh key for use with the test clusters (think ~/.ssh/id_rsa)
# SSH_PUBLIC_KEY - base64 encoded ssh public key for use with the test clusters (think ~/.ssh/id_rsa.pub)
#
# AWS Cluster Variables:
# AWS_CREDENTIALS - base64 encoded credentials file (think ~/.aws/credentials)
# AWS_CONFIG - base64 encoded config file (think ~/.aws/config)
#
# GKE Cluster Variables:
# GKE_CONFIG - base64 encoded json file (think ~/.config/gcloud/someconfig.json)
#
# Publish Variables:
# PUBLISH_REGISTRY - the registry you want to publish to (think quay.io)
# PUBLISH_USERNAME - the username for the registry
# PUBLISH_PASSWORD - the password for the registry
# PUBLISH_IMAGE - the image in the registry (organzation/namespace included, think samsung_cnct/kraken-tools)

.build_template: &build_definition
  stage: build
  services:
    - docker:dind
  image: docker:latest
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
  - docker build -t $IMAGE_URI .
  - docker push $IMAGE_URI

.dind_template:
  variables: &dind_definition
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2

build:branch-image:
  <<: *build_definition
  variables:
    <<: *dind_definition
    IMAGE_URI: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  only:
    - branches
    - master

build:tagged-image:
  <<: *build_definition
  variables:
    <<: *dind_definition
    IMAGE_URI: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

.aws-test: &aws_test_definition
  stage: test
  variables:
    JOB_BASE_NAME: ${CI_PROJECT_NAME}
    BUILD_ID: $CI_PIPELINE_ID
  only:
    - branches
    - master
  image: $IMAGE_URI
  script:
  - mkdir -p /root/.ssh /root/.aws
  - echo $SSH_KEY | base64 -d > /root/.ssh/id_rsa
  - chmod og-wrx /root/.ssh/id_rsa
  - echo $SSH_PUBLIC_KEY | base64 -d > /root/.ssh/id_rsa.pub
  - echo $AWS_CREDENTIALS | base64 -d > /root/.aws/credentials
  - echo $AWS_CONFIG | base64 -d > /root/.aws/config
  - /bin/bash -c /aws-testing.sh

.gke-test: &gke_test_definition
  stage: test
  variables:
    JOB_BASE_NAME: ${CI_PROJECT_NAME}
    BUILD_ID: $CI_PIPELINE_ID
  only:
    - branches
    - master
  image: $IMAGE_URI
  script:
  - mkdir -p /root/.ssh /root/.config/gcloud/
  - echo $SSH_KEY | base64 -d > /root/.ssh/id_rsa
  - chmod og-wrx /root/.ssh/id_rsa
  - echo $SSH_PUBLIC_KEY | base64 -d > /root/.ssh/id_rsa.pub
  - echo $GKE_CONFIG | base64 -d > /root/.config/gcloud/patrickRobot.json
  - /bin/bash -c /gke-testing.sh


test:aws-on-branch:
  <<: *aws_test_definition
  variables:
    IMAGE_URI: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  only:
    - branches
    - master

test:gke-on-branch:
  <<: *gke_test_definition
  variables:
    IMAGE_URI: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  only:
    - branches
    - master

test:aws-on-tags:
  <<: *aws_test_definition
  variables:
    IMAGE_URI: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

test:gke-on-tags:
  <<: *gke_test_definition
  variables:
    IMAGE_URI: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

deploy:tagged-image:
  stage: deploy
  services:
    - docker:dind
  variables:
    <<: *dind_definition
    IMAGE_URI: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags
  image: docker:latest
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker login -u $PUBLISH_USERNAME -p $PUBLISH_PASSWORD $PUBLISH_REGISTRY
  script:
  - docker pull $IMAGE_URI
  - docker tag $IMAGE_URI ${PUBLISH_REGISTRY}/${PUBLISH_IMAGE}:${CI_COMMIT_TAG}
  - docker push ${PUBLISH_REGISTRY}/${PUBLISH_IMAGE}:${CI_COMMIT_TAG}
